name: App with Sheriff CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - name: Cache node_modules and app
        id: cache-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
            npm-
      - if: ${{ steps.cache-modules.outputs.cache-hit != 'true' }}
        run: pnpm install --frozen-lockfile


  build:
    needs: install
    name: "run ${{ matrix.command }}"

    strategy:
      fail-fast: true
      matrix:
        command: [ build, lint, test ]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4
    - name: Restore node_modules and app Cache
      id: cache-modules
      uses: actions/cache/restore@v4
      env:
        cache-name: cache-node-modules
      with:
        path: |
          node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json', 'src/assets/openapi-*.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
          npm-

    - run: npm run ${{ matrix.command }}
      env:
        CI: true
